<div>
    <p class="lead">
        Use Ignite UI in your applications with the coding style that
        best fits you. Take full control of your pages by writing JavaScript to interact with the controls or you can opt to use the ASP.NET MVC Helpers to generate the JavaScript for you.
    </p>
    <div class="row">
        <div class="col-sm-6">
            <h2>Using JavaScript</h2>
            <p>
                Ignite UI controls are custom jQuery UI widgets
                which give you full control over where and when they
                render on the page.
            </p>
            <p class="example-label">Example:</p>
            <pre>$('#grid').igGrid({
    // the 'data' array can come from
    // an Ajax request or may be local
    // to the page
    dataSource: data,
    features: [
    {
        name: 'Sorting',
        type: 'local'
    }]
});</pre>
            <a href="/examples/javascript" class="btn btn-default btn-primary">More &raquo;</a>
        </div>
        <div class="col-sm-6">
            <h2>Using the MVC Helpers</h2>
            <p>
                Leverage the strongly-typed nature of the ASP.NET MVC Helpers 
                to expose each control's API in Visual Studio and generate 
                the needed JavaScript for the page.
            </p>
            <p class="example-label">Example:</p>
            <pre>@@(Html
    .Infragistics()
    .Grid(Model.Customers.AsQueryable())
    .DataBind()
    .Features(features =>
    {
        features.Sorting().
            Type(OpType.Local);
    })
    .Render())</pre>
            <a href="/examples/mvc-helper" class="btn btn-default btn-primary">More &raquo;</a>
        </div>
    </div>
</div>
