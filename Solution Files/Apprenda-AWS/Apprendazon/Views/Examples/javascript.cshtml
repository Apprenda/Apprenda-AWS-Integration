@{
    ViewBag.Title = "Ignite UI JavaScript Examples";
}


@section styles {
    <style>
        #chart {
            margin-top: 15px;
        }
    </style>
}

@section scripts{
       
    <script src="http://cdn-na.infragistics.com/igniteui/latest/js/infragistics.loader.js" type="text/javascript"></script>

    <script>
        var layoutFormatter = (function ($) {

            var showDeferredsIfHidden = function () {
                if (!$('.deferred').is(':visible')) {
                    $('.deferred').fadeIn();
                }
            };

            return {
                showDeferredsIfHidden: showDeferredsIfHidden
            }

        })(jQuery);


        /*
            The Infragistics Loader loads required Ignite UI
            JavaScript and CSS files into the page. This function
            tells the loader where the JavaScript and CSS paths exist in
            the application.

            Read more:  http://igniteui.com/loader/overview
        */
        $.ig.loader({
            scriptPath: 'http://cdn-na.infragistics.com/igniteui/latest/js',
            cssPath: 'http://cdn-na.infragistics.com/igniteui/latest/css',
            resources: 'igGrid,igGrid.Sorting,igEditors,igCombo,igDataChart.Category'
        });

        $.ig.loader(function () {

            $.get('/api/igcustomers').success(function (data) {

                /*
                    The igGrid is rendered on to the page via the
                    Ignite UI MVC helper. Using this helper you can
                    load the grid with data, enable features and much more.

                    Read more:  http://igniteui.com/grid/overview
                */
                $('#grid').igGrid({
                    dataSource: data,
                    features: [
				    {
				        name: 'Sorting',
				        type: 'local',
				        mode: 'multiple'
				    }]
                });

                /*
                    The igCombo control binds to a variety of data sources
                    including JSON, HTML select, XML, and .NET collections.

                    Read more: http://igniteui.com/combo/overview
                */
                $('#combo-editor').igCombo({
                    dataSource: data,
                    valueKey: 'id',
                    textKey: 'fullName',
                    selectedItems: [{ index: 0 }]
                });

                layoutFormatter.showDeferredsIfHidden();

            });

            /*
                There are a number of different types of editors available
                in Ignite UI. The following code demonstrates how to use
                some of the most common types of editors.

                Read more: http://igniteui.com/editors/overview
            */
            $('#text-editor').igTextEditor();

            $('#numeric-editor').igNumericEditor();

            $('#date-editor').igDateEditor();

            $('#currency-editor').igCurrencyEditor();


            $.get('/api/igcustomercountsummaries').success(function (data) {

                /*
                    The Ignite UI chart can render very large data sets and includes tooltips,
                    crosshairs, gradients, highlighting, and animation functionality.
                    The igDataChart renders over 50 chart types.

                    Read more:  http://igniteui.com/data-chart/overview
                */
                $('#chart').igDataChart({
                    dataSource: data,
                    height: '300px',
                    axes: [
                        {
                            type: 'categoryX',
                            name: 'Label',
                            label: 'categoryLabel'
                        },
                        {
                            type: 'numericY',
                            name: 'Count',
                            minimumValue: 0,
                            maximumValue: 5
                        }
                    ],
                    series: [
                        {
                            type: 'column',
                            name: 'ActiveCustomers',
                            xAxis: 'Label',
                            yAxis: 'Count',
                            valueMemberPath: 'customerCount'
                        }
                    ]
                });

                layoutFormatter.showDeferredsIfHidden();
            });
        });
    </script>
}

<div class="deferred">

    <div class="container clear-fix">
        <h2>Grid</h2>
        <div id="grid"></div>
    </div>

    <div class="container editors clear-fix">
        <h2>Editors</h2>

        <form class="form-horizontal" role="form">
            <div class="form-group">
                <label for="text-editor" class="col-sm-2 control-label">Text Editor</label>
                <div class="col-sm-10"><input id="text-editor" class="form-control" /></div>
            </div>
            <div class="form-group">
                <label for="numeric-editor" class="col-sm-2 control-label">Numeric Editor</label>
                <div class="col-sm-10"><input id="numeric-editor" class="form-control" /></div>
            </div>
            <div class="form-group">
                <label for="date-editor" class="col-sm-2 control-label">Date Editor</label>
                <div class="col-sm-10"><input id="date-editor" class="form-control" /></div>
            </div>
            <div class="form-group">
                <label for="currency-editor" class="col-sm-2 control-label">Currency Editor</label>
                <div class="col-sm-10"><input id="currency-editor" class="form-control" /></div>
            </div>
            <div class="form-group">
                <label for="combo-editor" class="col-sm-2 control-label">Combo</label>
                <div class="col-sm-10"><div id="combo-editor" class="form-control"></div></div>
            </div>
        </form>

    </div>

    <div class="container clear-fix">
        <h2>Chart</h2>
        <div id="chart"></div>
    </div>
</div>
